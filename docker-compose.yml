version: "3.8"
services:
#  nginx:
#    build:
#      context: .
#      dockerfile: "Dockerfile.nginx"
#    container_name: kanban_nginx
#    ports:
#      - 80:80
#      - 443:443
#    links:
#      - kanban

  db:
    image: postgres:15
    container_name: kanban_db
    volumes:
      - postgresdata:/var/lib/postgresql/data
    env_file:
      - .env-doc
    ports:
      - 5431:5431
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d kanban_db" ]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

  redis:
    image: redis:7
    container_name: redis
    ports:
      - 6379:6379


  kanban:
    build:
      context: .
    container_name: kanban_app
    env_file:
      - .env-doc
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    command: sh -c "alembic upgrade head && gunicorn app.main:app --workers 1 --worker-class uvicorn.workers.UvicornWorker --bind=0.0.0.0:8000"
    ports:
      - 8000:8000


  celery:
    build:
      context: .
    container_name: kanban_celery
    command: sh -c "celery --app=app.tasks.celeryfile:celery worker -l INFO"
    env_file:
      - .env-doc
    depends_on:
      - redis

  flower:
    build:
      context: .
    container_name: kanban_flower
    command: sh -c "celery --app=app.tasks.celeryfile:celery flower --url_prefix=/flower"
    env_file:
      - .env-doc
    depends_on:
      - redis
      - celery
    ports:
      - 5555:5555


volumes:
 postgresdata:
